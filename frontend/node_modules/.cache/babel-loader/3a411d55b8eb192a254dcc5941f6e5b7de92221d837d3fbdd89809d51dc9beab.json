{"ast":null,"code":"var _jsxFileName = \"/Users/maanitmalhan/Documents/IAC_Center/recc-manager/frontend/src/context/ReccContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReccContext = /*#__PURE__*/createContext();\nlet initialState = {\n  reccArray: [],\n  filteredReccArray: []\n};\nexport const reccReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_RECCS':\n      return {\n        reccArray: action.payload,\n        filteredReccArray: action.payload\n      };\n    case 'CREATE_RECC':\n      return {\n        reccArray: [action.payload, ...state.reccArray],\n        filteredReccArray: [action.payload, ...state.reccArray]\n      };\n    case 'DELETE_RECC':\n      return {\n        reccArray: state.reccArray.filter(r => r._id !== action.payload._id),\n        filteredReccArray: state.reccArray.filter(r => r._id !== action.payload._id)\n      };\n    case 'FILTER_RECCS':\n      {\n        let newFilteredReccArray = [];\n        if (action.payload === '') {\n          newFilteredReccArray = state.reccArray;\n        } else {\n          state.reccArray.forEach(r => {\n            if (r.ARCcode === parseFloat(action.payload)) {\n              newFilteredReccArray.push(r);\n            }\n          });\n        }\n        return {\n          reccArray: state.reccArray,\n          filteredReccArray: newFilteredReccArray\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const ReccContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reccReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ReccContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(ReccContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ReccContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ReccContextProvider\");","map":{"version":3,"names":["createContext","useReducer","jsxDEV","_jsxDEV","ReccContext","initialState","reccArray","filteredReccArray","reccReducer","state","action","type","payload","filter","r","_id","newFilteredReccArray","forEach","ARCcode","parseFloat","push","ReccContextProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maanitmalhan/Documents/IAC_Center/recc-manager/frontend/src/context/ReccContext.js"],"sourcesContent":["import { createContext, useReducer } from 'react';\n\nexport const ReccContext = createContext();\n\nlet initialState = {\n    reccArray: [],\n    filteredReccArray: [],\n}\n\nexport const reccReducer = (state, action) => {\n\n    switch (action.type){\n        case 'SET_RECCS': \n            return {\n                reccArray: action.payload,\n                filteredReccArray: action.payload,\n            }       \n        case 'CREATE_RECC':\n            return {\n                reccArray: [action.payload, ...state.reccArray],\n                filteredReccArray: [action.payload, ...state.reccArray],\n    }\n        case 'DELETE_RECC':\n            return {\n                reccArray: state.reccArray.filter((r)=> r._id !== action.payload._id),\n                filteredReccArray: state.reccArray.filter((r)=> r._id !== action.payload._id),\n    }\n        case 'FILTER_RECCS': {\n            let newFilteredReccArray = [];\n            if (action.payload === '') {\n                newFilteredReccArray = state.reccArray;\n            } else {\n                state.reccArray.forEach((r) => {\n                    if (r.ARCcode === parseFloat(action.payload)) {\n                        newFilteredReccArray.push(r);\n                    }\n                });\n            }\n\n            return {\n                reccArray: state.reccArray,\n                filteredReccArray: newFilteredReccArray,\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const ReccContextProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer( reccReducer, initialState);\n\n    return (\n        <ReccContext.Provider value={{...state, dispatch}}>\n            { children }\n        </ReccContext.Provider>\n    )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,IAAIK,YAAY,GAAG;EACfC,SAAS,EAAE,EAAE;EACbC,iBAAiB,EAAE;AACvB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAE1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,WAAW;MACZ,OAAO;QACHL,SAAS,EAAEI,MAAM,CAACE,OAAO;QACzBL,iBAAiB,EAAEG,MAAM,CAACE;MAC9B,CAAC;IACL,KAAK,aAAa;MACd,OAAO;QACHN,SAAS,EAAE,CAACI,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACH,SAAS,CAAC;QAC/CC,iBAAiB,EAAE,CAACG,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACH,SAAS;MAClE,CAAC;IACG,KAAK,aAAa;MACd,OAAO;QACHA,SAAS,EAAEG,KAAK,CAACH,SAAS,CAACO,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACG,GAAG,CAAC;QACrER,iBAAiB,EAAEE,KAAK,CAACH,SAAS,CAACO,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO,CAACG,GAAG;MACxF,CAAC;IACG,KAAK,cAAc;MAAE;QACjB,IAAIC,oBAAoB,GAAG,EAAE;QAC7B,IAAIN,MAAM,CAACE,OAAO,KAAK,EAAE,EAAE;UACvBI,oBAAoB,GAAGP,KAAK,CAACH,SAAS;QAC1C,CAAC,MAAM;UACHG,KAAK,CAACH,SAAS,CAACW,OAAO,CAAEH,CAAC,IAAK;YAC3B,IAAIA,CAAC,CAACI,OAAO,KAAKC,UAAU,CAACT,MAAM,CAACE,OAAO,CAAC,EAAE;cAC1CI,oBAAoB,CAACI,IAAI,CAACN,CAAC,CAAC;YAChC;UACJ,CAAC,CAAC;QACN;QAEA,OAAO;UACHR,SAAS,EAAEG,KAAK,CAACH,SAAS;UAC1BC,iBAAiB,EAAES;QACvB,CAAC;MACL;IACA;MACI,OAAOP,KAAK;EACpB;AACJ,CAAC;AAGD,OAAO,MAAMY,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEjD,MAAM,CAACd,KAAK,EAAEe,QAAQ,CAAC,GAAGvB,UAAU,CAAEO,WAAW,EAAEH,YAAY,CAAC;EAEhE,oBACIF,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAC,GAAGjB,KAAK;MAAEe;IAAQ,CAAE;IAAAF,QAAA,EAC5CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE/B,CAAC;AAAAP,EAAA,CATYF,mBAAmB;AAAAU,EAAA,GAAnBV,mBAAmB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}